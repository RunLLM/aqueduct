name: Run Notebooks

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'src/golang/**'
      - 'src/python/**'
      - 'sdk/aqueduct/**'
  pull_request:
    paths:
      - '.github/workflows/run-notebooks.yml'
      - "examples/churn_prediction/Build and Deploy Churn Ensemble.ipynb"
      - "examples/sentiment_analysis/Sentiment Model.ipynb"
      - "integration_tests/notebook/imported_function.ipynb"

jobs:
  run-notebooks:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Set filename for the server's output logs
        run: echo "SERVER_LOGS_FILE=server_logs" >> $GITHUB_ENV

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.10'

      - name: Set up GOPATH variable
        run: echo "GOPATH=$(echo $HOME)" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.3

      - name: Install aqueduct-ml
        run: pip3 install aqueduct-ml

      - name: Start the server
        run: (aqueduct start > $SERVER_LOGS_FILE 2>&1 &)

      - name: Wait for server
        timeout-minutes: 1
        run: while ! echo exit | nc localhost 8080; do sleep 1; done

      # Grabs the pid of the process bound to port 8080 and kills it.
      - name: Kill the server
        run: kill -9 $(lsof -nP -iTCP -sTCP:LISTEN | grep 8080 | awk '{print $2}')

      # install_local.py requires ~/.aqueduct to exist.
      - name: Update aqueduct with latest code
        run: python3 scripts/install_local.py --gobinary --sdk --executor

      - name: Start the server again
        run: (aqueduct start > $SERVER_LOGS_FILE 2>&1 &)

      - name: Install Packages needed by the notebooks
        run: pip3 install sklearn transformers torch

      - name: Wait for server again
        timeout-minutes: 1
        run: while ! echo exit | nc localhost 8080; do sleep 1; done

      - name: Fetch the API key
        run: echo "API_KEY=$(aqueduct apikey)" >> $GITHUB_ENV

      - name: Run Sentiment Notebook
        working-directory: examples
        timeout-minutes: 10
        run: python3 run_notebook.py --path "sentiment_analysis/Sentiment Model.ipynb" --api_key ${{ env.API_KEY }} --server_address localhost:8080

      - name: Run Churn Notebook
        working-directory: examples
        timeout-minutes: 10
        run: python3 run_notebook.py --path "churn_prediction/Build and Deploy Churn Ensemble.ipynb" --api_key ${{ env.API_KEY }} --server_address localhost:8080

      - name: Run Parameterization Notebook
        working-directory: examples
        timeout-minutes: 10
        run: python3 run_notebook.py --path "parameterization/Using Workflow Parameters.ipynb" --api_key ${{ env.API_KEY }} --server_address localhost:8080

      - name: Run Imported Function Notebook
        timeout-minutes: 10
        run: python3 examples/run_notebook.py --path "integration_tests/notebook/imported_function.ipynb" --api_key ${{ env.API_KEY }} --server_address localhost:8080

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Server Logs
          path: server_logs

      - name: Report to Slack on Failure
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notification_title: ''
          message_format: '{emoji} *{workflow}* has {status_message}'
          footer: '{run_url}'
          notify_when: 'failure,warnings'
          mention_users: 'U025MDH5KS6,U01JEUX1J2Y,U01J8Q1HUBC'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
