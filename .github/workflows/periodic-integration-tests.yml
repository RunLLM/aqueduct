name: Periodic Integration Tests

on:
  schedule:
     - cron: '0 15 * * 1-5' # Run at 7AM PST on every weekday
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        # These are all the Python versions that we support.
        python-version: ['3.7', '3.8', '3.9', '3.10']
        concurrency: [ 2, 5 ]

    name: Run Integration Tests with Python Version ${{ matrix.python-version }} Concurrency ${{ matrix.concurrency }}
    steps:
      - uses: actions/checkout@v2

      - name: Create the logs directory
        run: mkdir -p logs

      - name: Set filename for the server's output logs
        run: echo "SERVER_LOGS_FILE=logs/server_logs_${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up GOPATH variable
        run: echo "GOPATH=$(echo $HOME)" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.1
      
      - name: Install aqueduct-ml
        run: python3 -m pip install aqueduct-ml

      - name: Start the server
        run: (aqueduct start --verbose > $SERVER_LOGS_FILE 2>&1 &)

      - name: Wait for server
        timeout-minutes: 1
        run: while ! echo exit | nc localhost 8080; do sleep 1; done

      # Grabs the pid of the process bound to port 8080 and kills it.
      - name: Kill the server
        run: kill -9 $(lsof -nP -iTCP -sTCP:LISTEN | grep 8080 | awk '{print $2}')

      # install_local.py requires ~/.aqueduct/server scaffolding to exist.
      - name: Update aqueduct with latest code
        run: python3 scripts/install_local.py --gobinary --sdk --executor

      - name: Start the server again
        run: (aqueduct start --disable-usage-stats --verbose > $SERVER_LOGS_FILE 2>&1 &)

      - name: Install packages needed for testing
        run: python3 -m pip install nltk matplotlib pytest-xdist

      - name: Wait for server again
        timeout-minutes: 1
        run: while ! echo exit | nc localhost 8080; do sleep 1; done

      - name: Fetch the API key
        run: echo "API_KEY=$(aqueduct apikey)" >> $GITHUB_ENV

      - name: Set up the SDK Integration Tests
        working-directory: integration_tests/sdk
        run: |
          echo "apikey: $(aqueduct apikey)" >> test-credentials.yml
          echo "address: localhost:8080" >> test-config.yml
          echo "\n data:\n  aqueduct_demo:" >> test-config.yml
          echo "\n compute:\n  aqueduct_compute:" >> test-config.yml

      - name: Run the SDK Integration Tests
        timeout-minutes: 40
        working-directory: integration_tests/sdk
        run: python3 run_tests.py -n 5

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Server Logs
          path: logs/

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Executor Logs
          path: ~/.aqueduct/server/logs/*

      - name: Report to Slack on Failure
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notification_title: ''
          message_format: '{emoji} *{workflow}* has {status_message}'
          footer: '{run_url}'
          notify_when: 'failure,warnings'
          mention_users: 'U025MDH5KS6'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
