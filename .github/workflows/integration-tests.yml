name: Integration Tests

on:
  workflow_call:
  workflow_dispatch:

jobs:
  run-tests-basic:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    name: All Integration Tests with Basic Config
    steps:
      - uses: actions/checkout@v2

      - name: Configure aws credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.KENNY_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.KENNY_AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id value $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key value $AWS_SECRET_ACCESS_KEY

      - name: Fetch test config
        working-directory: integration_tests/sdk
        run: aws s3 cp s3://aqueduct-assets/premerge-basic-test-config.yml ./test-config.yml

      - uses: ./.github/actions/setup-server
        timeout-minutes: 5

      - name: Set up the SDK Integration Tests
        working-directory: integration_tests/sdk
        run: |
          echo "apikey: $(aqueduct apikey)" >> test-credentials.yml
#          printf "address: localhost:8080" >> test-config.yml
#          printf "\ndata:\n  aqueduct_demo:" >> test-config.yml
#          printf "\ncompute:\n  aqueduct_engine:" >> test-config.yml

      - name: Run the SDK Integration Tests
        timeout-minutes: 10
        working-directory: integration_tests/sdk
        run: python3 run_tests.py -n 8

      - name: Set the API key as an env variable.
        run: echo "API_KEY=$(aqueduct apikey)" >> $GITHUB_ENV

      - name: Run the No-Concurrency Integration Tests
        timeout-minutes: 10
        working-directory: integration_tests/no_concurrency
        env:
          SERVER_ADDRESS: localhost:8080
          INTEGRATION: aqueduct_demo
        run: pytest . -rP

      - name: Run the Backend Integration Tests
        timeout-minutes: 10
        working-directory: integration_tests/backend
        env:
          SERVER_ADDRESS: localhost:8080
          INTEGRATION: aqueduct_demo
        run: pytest . -rP -n 1

      - uses: ./.github/actions/upload-artifacts
        if: always()
        with:
          prefix: Basic