name: Integration Tests

on:
  workflow_call:
    secrets:
      KENNY_AWS_ACCESS_KEY_ID:
        required: true
      KENNY_AWS_SECRET_ACCESS_KEY:
        required: true
      PYPI_API_TOKEN_SDK:
        required: true
      PYPI_API_TOKEN_EXECUTOR:
        required: true

  workflow_dispatch:

jobs:
  publish-pypi:
    # similar to release scripts, but publish to test pypi:
    # rm -rf dist && rm -rf build
    # python3 -m build && twine check dist/*
    # twine upload --repository testpypi dist/*
    # pip3 install -i https://test.pypi.org/simple/ aqueduct-ml
    name: Publish Test Pypi Packages
    runs-on: [ubuntu-latest]
    timeout-minutes: 20
    outputs:
      version: ${{ steps.inject_version.outputs.version }}
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: install missing dependencies
        run: pip install build twine

      - name: inject dev version
        id: inject_version
        run: |
          export VERSION=0.1.dev$(date +%s)
          rm sdk/version
          echo $VERSION >> sdk/version
          rm src/python/version
          echo $VERSION >> src/python/version
          echo version=$VERSION >> $GITHUB_OUTPUT

      - name: build sdk
        working-directory: sdk
        run: |
          rm -rf dist
          rm -rf build
          python3 -m build
          twine check dist/*

      - name: publish sdk
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: sdk/dist
          password: ${{ secrets.PYPI_API_TOKEN_SDK }}

      - name: build executor
        working-directory: src/python
        run: |
          rm -rf dist
          rm -rf build
          python3 -m build
          twine check dist/*

      - name: publish executor
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: src/python/dist
          password: ${{ secrets.PYPI_API_TOKEN_EXECUTOR }}

  run-tests-conda:
    runs-on: ubuntu-latest-4-cores
    timeout-minutes: 60
    needs: publish-pypi
    name: All Integration Tests with Conda
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/setup-server
        timeout-minutes: 7
        with:
          python-pkg-version: ${{ needs.publish-pypi.outputs.version }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
          python-version: ${{ matrix.python-version }}

      - name: Install conda build
        run: conda install conda-build

      - name: Update conda
        run: conda update --all

      # TODO(ENG-2537): Use our separate GH actions credentials.
      - uses: ./.github/actions/fetch-test-config
        with:
          aws_access_key_id: ${{ secrets.KENNY_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.KENNY_AWS_SECRET_ACCESS_KEY }}
          s3_test_config_path: periodic-conda-test-config.yml

      - name: Run the SDK Integration Tests
        timeout-minutes: 45
        working-directory: integration_tests/sdk
        run: python3 run_tests.py -n 8

      - name: Set the API key as an env variable.
        run: echo "API_KEY=$(aqueduct apikey)" >> $GITHUB_ENV

      - name: Run the No-Concurrency Integration Tests
        timeout-minutes: 15
        working-directory: integration_tests/no_concurrency
        env:
          SERVER_ADDRESS: localhost:8080
          INTEGRATION: aqueduct_demo
        run: pytest . -rP

      - uses: ./.github/actions/upload-artifacts
        if: always()
        with:
          prefix: Conda
