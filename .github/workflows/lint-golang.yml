name: Golang Linter

# Reference: https://github.com/golangci/golangci-lint-action

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'src/golang/**'

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.1

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: 'latest'

          # Optional: working directory, useful for monorepos.
          working-directory: src/golang

          # Optional: golangci-lint command line arguments.
          args: --verbose --concurrency 4

          # NOTE (saurav): This flag should be enabled, but for now there is a known issue when using
          # only-new-issues with working-directory (https://github.com/golangci/golangci-lint-action/issues/150).
          # There is no other good way to specify the subdirectory for a monorepo, so we have to set the
          # timeout as well. Once the issue is resolved, the timeout can be removed and only-new-issues can be enabled.

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

