{
  // see https://www.typescriptlang.org/tsconfig to better understand tsconfigs
  "include": [
    "src",
    "types"
  ],
  "exclude": [
    "node_modules"
  ],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ],
  "compilerOptions": {
    "target": "es5",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowSyntheticDefaultImports": true,
    "allowJs": true,
    // significant perf increase by skipping checking .d.ts files, particularly those in node_modules. Recommended by TS
    "skipLibCheck": true,
    // stricter type-checking for stronger correctness. Recommended by TS
    "strict": false,
    // error out if import and file system have a casing mismatch. Recommended by TS
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    // interop between ESM and CJS modules. Recommended by TS
    "esModuleInterop": true,
    "module": "esnext",
    // use Node's module resolution algorithm, instead of the legacy TS one
    "moduleResolution": "node",
    "resolveJsonModule": true,
    // transpile JSX to React.createElement
    //"jsx": "react",
    "jsx": "preserve",
    "baseUrl": ".",
    //"importHelpers": true,
    // output .d.ts declaration files for consumers
    "declaration": true,
    "declarationMap": true,
    // output .js.map sourcemap files for consumers
    "sourceMap": true,
    // match output dir to input dir. e.g. dist/index instead of dist/src/index
    "rootDir": "./src",
    "incremental": true,
    "paths": {
      "@components/*": [
        "components/*"
      ],
      "@reducers/*": [
        "reducers/*"
      ],
      "@stores/*": [
        "stores/*"
      ],
      "@stories/*": [
        "stories/*"
      ],
      "@styles/*": [
        "styles/*"
      ],
      "@utils/*": [
        "utils/*"
      ]
    }
  }
}